<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Todo App</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/locale/id.js"></script>
</head>

<body>
    <div class="container mt-5">
        <div class="card">
            <div class="card-header text-center">
                <h1>MongoDB Todos(Browse, Read, Edit, Add, Delete, Sort)</h1>
            </div>
            <div class="card-body">
                <form id="searchForm">
                    <div class="row mb-3">
                        <label for="searchInput" class="col-sm-2 col-form-label">Title</label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control" id="searchInput"
                                placeholder="Search by title, deadline, or status">
                        </div>
                    </div>
                    <div class="row mb-3">
                        <label for="startDate" class="col-sm-2 col-form-label">Start Date</label>
                        <div class="col-sm-4">
                            <input type="date" class="form-control" id="startDate">
                        </div>
                        <label for="endDate" class="col-sm-2 col-form-label text-center">s.d</label>
                        <div class="col-sm-4">
                            <input type="date" class="form-control" id="endDate">
                        </div>
                    </div>
                    <div class="row mb-3">
                        <label for="statusSelect" class="col-sm-2 col-form-label">Status</label>
                        <div class="col-sm-10">
                            <select class="form-select" id="statusSelect">
                                <option value="">All Status</option>
                                <option value="true">Done</option>
                                <option value="false">Not Yet</option>
                            </select>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <button class="btn btn-success mb-3 col-sm-2" id="sortBtn"
                            style="margin-left: 10px; margin-right: 10px">
                            <i class="fas fa-sort"></i> Sort by Deadline
                        </button>
                        <div class="col-sm-8">
                            <button type="button" class="btn btn-warning" id="resetBtn"><i
                                    class="fas fa-sync"></i></button>
                            <button type="submit" class="btn btn-info"><i class="fas fa-search"></i></button>
                        </div>
                    </div>
                </form>
            </div>
            <div class="card-footer">
                <form id="addTodoForm">
                    <div class="input-group">
                        <input type="text" class="form-control" id="newTodoTitle" name="title"
                            placeholder="Enter new todo title">
                        <button class="btn btn-outline-primary" type="submit"><i
                                class="fa-solid fa-circle-down"></i></button>
                    </div>
                </form>
            </div>
        </div>
        <div id="todoList" class="mt-3"></div>
    </div>

    <div class="modal fade" id="editModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Todo</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editForm">
                        <input type="hidden" id="editId">
                        <div class="mb-3">
                            <label for="editTitle" class="form-label">Title</label>
                            <input type="text" class="form-control" id="editTitle" required>
                        </div>
                        <div class="mb-3">
                            <label for="editDeadline" class="form-label">Deadline</label>
                            <input type="datetime-local" class="form-control" id="editDeadline" required>
                        </div>
                        <div class="mb-3">
                            <label for="editStatus" class="form-label">Status</label>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="editStatus">
                                <label class="form-check-label" for="editStatus">
                                    Done
                                </label>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="saveEdit">Save changes</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Delete</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this todo?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        const params = { userid: '<%= userid %>' }

        const API_URL = 'http://localhost:3000';
        moment.locale('id');
        let todos = [];
        let currentPage = 1;
        let itemsPerPage = 10;
        let sortBy = '_id';
        let sortOrder = 'desc';
        let currentUserId = params.userid;
        let isLoading = false;
        let hasMoreData = true;

        function renderTodos() {
            const todoList = $('#todoList');
            todoList.empty();
            todos.forEach(todo => {
                const deadlineDate = moment(todo.deadline);
                const isPastDeadline = deadlineDate.isBefore(moment());
                const alertClass = todo.complete ? 'alert-success' : (isPastDeadline ? 'alert-danger' : 'alert-info');
                const todoHtml = `
                    <div class="alert ${alertClass}" role="alert">
                        ${deadlineDate.format('DD-MM-YYYY HH:mm')} ${todo.title}
                        <div class="float-end">
                            <button class="btn btn-sm edit-btn me-1" data-id="${todo._id}"><i class="fa-solid fa-pen"></i></button>
                            <button class="btn btn-sm delete-btn" data-id="${todo._id}"><i class="fas fa-trash"></i></button>
                        </div>
                    </div>
                `;
                todoList.append(todoHtml);
            });
        }

        function fetchTodos(reset = false) {
            if (isLoading || (!hasMoreData && !reset)) return;

            isLoading = true;
            if (reset) {
                todos = [];
                currentPage = 1;
                hasMoreData = true;
                $('#todoList').empty();
            }

            const queryParams = {
                page: currentPage,
                limit: itemsPerPage,
                sortBy: sortBy,
                sortOrder: sortOrder,
                executor: currentUserId
            };

            $.ajax({
                url: `${API_URL}/todos`,
                method: 'GET',
                data: queryParams,
                success: function (data) {
                    if (data.data.length === 0) {
                        hasMoreData = false;
                        isLoading = false;
                        if (todos.length === 0) {
                            $('#todoList').html('<div class="alert alert-info">No todos found</div>');
                        }
                        return;
                    }
                    todos = reset ? data.data : todos.concat(data.data);
                    renderTodos();
                    currentPage++;
                    isLoading = false;
                },
                error: function (err) {
                    console.error('Error fetching todos:', err);
                    isLoading = false;
                    $('#todoList').html('<div class="alert alert-danger">Error loading todos. Please try again.</div>');
                }
            });
        }

        $('#searchForm').submit(function (e) {
            e.preventDefault();
            const searchQuery = $('#searchInput').val().trim();
            const startDate = $('#startDate').val();
            const endDate = $('#endDate').val();
            const status = $('#statusSelect').val();

            const queryParams = {
                page: 1,
                limit: itemsPerPage,
                sortBy: sortBy,
                sortOrder: sortOrder,
                executor: currentUserId
            };

            if (searchQuery) queryParams.title = searchQuery;
            if (status !== '') queryParams.complete = status === 'true';
            if (startDate) queryParams.startDate = startDate;
            if (endDate) queryParams.endDate = endDate;

            $.ajax({
                url: `${API_URL}/todos`,
                method: 'GET',
                data: queryParams,
                beforeSend: function () {
                    $('#todoList').html('<div class="text-center"><div class="spinner-border" role="status"><span class="visually-hidden">Loading...</span></div></div>');
                },
                success: function (data) {
                    todos = data.data && Array.isArray(data.data) ? data.data : [];
                    currentPage = 2;
                    hasMoreData = todos.length >= itemsPerPage;
                    renderTodos();
                },
                error: function (err) {
                    console.error('Error searching todos:', err);
                    $('#todoList').html('<div class="alert alert-danger">Error searching todos. Please try again.</div>');
                }
            });
        });

        $('#resetBtn').click(function (e) {
            e.preventDefault();
            $('#searchForm')[0].reset();
            sortBy = '_id';
            sortOrder = 'desc';
            fetchTodos(true);
        });

        $('#sortBtn').click(function () {
            sortOrder = sortOrder === 'asc' ? 'desc' : 'asc';
            fetchTodos(true);
        });

        $('#addTodoForm').submit(function (e) {
            e.preventDefault();
            const title = $('#newTodoTitle').val();
            if (title) {
                const newTodo = {
                    title: title,
                    deadline: moment().format(),
                    complete: false,
                    executor: currentUserId
                };

                $.ajax({
                    url: `${API_URL}/todos`,
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(newTodo),
                    success: function (result) {
                        if (result.acknowledged && result.insertedId) {
                            $('#newTodoTitle').val('');
                            fetchTodos(true);
                        } else {
                            throw new Error('Invalid response from server');
                        }
                    },
                    error: function (error) {
                        console.error('Error adding todo:', error);
                        alert('Error adding todo. Please try again.');
                    }
                });
            }
        });

        $(document).on('click', '.edit-btn', function (e) {
            e.preventDefault();
            const id = $(this).data('id');
            $.ajax({
                url: `${API_URL}/todos/${id}`,
                method: 'GET',
                success: function (todo) {
                    if (!todo || !todo._id) {
                        throw new Error('Invalid todo data received');
                    }
                    $('#editId').val(todo._id);
                    $('#editTitle').val(todo.title || '');
                    $('#editDeadline').val(todo.deadline ? moment(todo.deadline).format('YYYY-MM-DDTHH:mm') : '');
                    $('#editStatus').prop('checked', todo.complete);
                    new bootstrap.Modal(document.getElementById('editModal')).show();
                },
                error: function (err) {
                    console.log('Error fetching todo for edit:', err);
                    alert('Failed to load todo for editing. Please try again.');
                }
            });
        });

        $('#saveEdit').click(function () {
            const id = $('#editId').val();
            const updatedTodo = {
                title: $('#editTitle').val(),
                deadline: moment($('#editDeadline').val()).format(),
                complete: $('#editStatus').is(':checked'),
                executor: currentUserId
            };

            $.ajax({
                url: `${API_URL}/todos/${id}`,
                method: 'PUT',
                contentType: 'application/json',
                data: JSON.stringify(updatedTodo),
                success: function (updatedTodo) {
                    bootstrap.Modal.getInstance(document.getElementById('editModal')).hide();
                    showToast('Todo updated successfully', 'success');
                    fetchTodos(true);
                },
                error: function (error) {
                    console.log('Error updating todo:', error.responseJSON);
                    showToast('Failed to update todo. Please try again.', 'error');
                }
            });
        });

        function showToast(message, type) {
            const toast = $(`<div class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-body ${type === 'error' ? 'bg-danger text-white' : 'bg-success text-white'}">
                    ${message}
                </div>
            </div>`);
            $('.toast-container').append(toast);
            toast.toast({ delay: 3000 }).toast('show');
        }

        $(document).on('click', '.delete-btn', function () {
            const id = $(this).data('id');
            $('#confirmDelete').data('id', id);
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        });

        $('#confirmDelete').click(function () {
            const id = $(this).data('id');
            $.ajax({
                url: `${API_URL}/todos/${id}`,
                method: 'DELETE',
                success: function () {
                    bootstrap.Modal.getInstance(document.getElementById('deleteModal')).hide();
                    fetchTodos(true);
                },
                error: function (err) {
                    console.error('Error deleting todo:', err);
                }
            });
        });

        $(window).scroll(function () {
            if ($(window).scrollTop() + $(window).height() > $(document).height() - 100) {
                fetchTodos();
            }
        });

        fetchTodos(true);
    </script>
</body>

</html>